<?php

namespace Sdz\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    
    // Fonction pour recupérer les derniers articles
    public function rfind()
    {
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('a')
           ->from('BlogBundle:Article', 'a')
           ->orderBy('a.date', 'DESC');
                  
        return  $qb->getQuery()
                    ->getResult();
        
    }
    
    public function getArticles($nombreParPage, $page)
    {
        // On déplace la vérification du numéro de page dans cetteméthode
   if ($page < 1) {
            throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "'.$page.'").');
              }
         // La construction de la requête reste inchangée
      $query = $this->createQueryBuilder('a')
          ->leftJoin('a.image', 'i')
          ->addSelect('i')
          ->leftJoin('a.categories', 'cat')
          ->addSelect('cat')
          ->orderBy('a.date', 'DESC')
          ->getQuery();
        // On définit l'article à partir duquel commencer la liste
        $query->setFirstResult(($page-1) * $nombreParPage)
// Ainsi que le nombre d'articles à afficher
             ->setMaxResults($nombreParPage);
// Enfin, on retourne l'objet Paginator correspondant à larequête construite
// (n'oubliez pas le use correspondant en début de fichier)
      return new Paginator($query);
    }
    
    
    
    
}
